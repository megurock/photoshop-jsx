/* <javascriptresource><name>ガイドを一定間隔で作成</name><category>net.megrock.ps</category></javascriptresource>*/// text for localizevar text = {	desc: {		en: "Creates guide at specified distance. Values can be like 100, 10.",		ja: "ガイドを一定の間隔で生成します。100, 10のような書き方もできます。"	},	title: { en: 'GuideMaker', ja: 'ガイドメーカー' },	hSettings: { en:'Horizontal Guides', ja:'水平ガイド' },	vSettings: { en:'Vertical Guides', ja:'垂直ガイド' },	repeat: { en:'repeats', ja:'リピート' },	ok: { en: 'OK', ja: 'OK' },    cancel: { en: 'Cancel', ja: 'キャンセル' }};/** * open a dialog window */function showDialog() {	try {		var win = new Window('dialog', localize(text.title));		// description		win.desc = win.add('panel');		win.desc.orientation = 'row';		win.desc.alignment = 'fill';		win.desc.alignChildren = 'left';		win.desc.coords = win.desc.add('group');		win.desc.coords.orientation = 'row';		win.desc.coords.add('statictext', undefined, localize(text.desc));		// vertical guide settings		win.vSettings = win.add('panel', undefined, localize(text.vSettings));		win.vSettings.orientation = 'row';		win.vSettings.alignment = 'fill';		win.vSettings.alignChildren = 'center';		win.vSettings.coords = win.vSettings.add('group');		win.vSettings.coords.orientation = 'row';		win.vSettings.coords.add('statictext', undefined, "x:");		win.vSettings.coords.input = win.vSettings.coords.add('edittext', undefined, "");		win.vSettings.coords.input.preferredSize = [ 125, 20 ];		win.vSettings.repeat = win.vSettings.add('group');		win.vSettings.repeat.orientation = 'row';		win.vSettings.repeat.checkBox = win.vSettings.repeat.add('checkbox', undefined, localize(text.repeat));		win.vSettings.repeat.checkBox.value = true;		// horizontal guide settings		win.hSettings = win.add('panel', undefined, localize(text.hSettings));		win.hSettings.orientation = 'row';		win.hSettings.alignment = 'fill';		win.hSettings.alignChildren = 'center';		win.hSettings.coords = win.hSettings.add('group');		win.hSettings.coords.orientation = 'row';		win.hSettings.coords.add('statictext', undefined, "y:");		win.hSettings.coords.input = win.hSettings.coords.add('edittext', undefined, "");		win.hSettings.coords.input.preferredSize = [ 125, 20 ];		win.hSettings.repeat = win.hSettings.add('group');		win.hSettings.repeat.orientation = 'row';		win.hSettings.repeat.checkBox = win.hSettings.repeat.add('checkbox', undefined, localize(text.repeat));		win.hSettings.repeat.checkBox.value = true;		// buttons		win.buttons = win.add('group');		win.buttons.orientation = 'row';		win.buttons.alignment = 'center';		// ok button		win.okBtn = win.buttons.add('button', undefined, localize(text.ok));		win.okBtn.onClick = function() {			makeGuides(win.hSettings.coords.input.text, 'Hrzn', win.hSettings.repeat.checkBox.value);			makeGuides(win.vSettings.coords.input.text, 'Vrtc', win.vSettings.repeat.checkBox.value);			win.close();		};		// cancel button		win.cancelBtn = win.buttons.add('button', undefined, localize(text.cancel));		win.cancelBtn.onClick = function() {			win.close();		};		win.show();	} catch (error) {}}/** + param @coods coordintaes devided by ',' * param @orientation 'Vrtc' / 'Hrzn'*/function makeGuides(coords, orientation, isRepeat) {	if (coords === "") {		return;	}	coords = coords.split(',');	var i, len;	len = coords.length;	if (isRepeat) {		var max = (orientation == 'Hrzn') ? activeDocument.height : activeDocument.width;		var total = 0;		while (total < max) {			for (i = 0; i < len; i++) {				total += Number(coords[i]);				if (total >= max) return;				makeGuide(total, orientation);			}		}	} else {		for (i = 0; i < len; i++) makeGuide(coords[i], orientation);	}}/** *  */function makeGuide(pixelOffSet, orientation) {	var desc4 = new ActionDescriptor(),		desc5 = new ActionDescriptor(),		id8 = charIDToTypeID("Mk  "),		id9 = charIDToTypeID("Nw  "),		id10 = charIDToTypeID("Pstn"),		id11 = charIDToTypeID("#Rlt"),		id12 = charIDToTypeID("Ornt"),		id13 = charIDToTypeID(orientation), // "Vrtc", "Hrzn"		id14 = charIDToTypeID("Gd  ");	//	desc5.putUnitDouble( id10, id11, pixelOffSet); // integer	desc5.putEnumerated( id12, id12, id13 );	desc4.putObject( id9, id14, desc5 );	executeAction( id8, desc4, DialogModes.NO );}showDialog();